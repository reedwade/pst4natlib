#!/usr/bin/env python

import sys
import mailbox
import email.utils
import glob

from datetime import datetime
import time
from elasticsearch import Elasticsearch

index_name = "mail"

es = Elasticsearch()

if es.indices.exists(index=index_name):
    print "deleting index", index_name
    es.indices.delete(index=index_name)

for mbox_file in glob.glob('../../pst4natlib-data/mboxes/*'):
    print
    print "opening mbox file", mbox_file
    print
    count = 0
    messages = mailbox.mbox(mbox_file)
    mailbox_name = mbox_file.split('/')[-1]
    count_within_mbox = 0
    for message in messages:
        count_within_mbox += 1
        count += 1

        for message_part in message.walk():
            if message_part.get_content_type() == 'text/plain':

                if (count % 10) == 0:
                    print " ",count,

                payload = message_part.get_payload()
                source_encoding = message_part.get_content_charset()

                if source_encoding:
                    if source_encoding == 'windows-874':
                        # Thai windows-874 isn't in our encoding table but it's the same as iso-8859-11
                        source_encoding = 'iso-8859-11'
                else:
                    # presume latin-1 if not given
                    source_encoding = 'iso-8859-1'

                try:
                    payload = payload.decode(source_encoding).encode('utf8')
                except Exception, e:
                    print "skipping message {messageid}: {e}".format(
                        messageid=message['Message-id'],
                        e=e,
                        )

                out = {
                    'index':index_name,
                    'doc_type':"email",
                    'body':{
                        "subject":  message['subject'],
                        "to":       message['to'],
                        "from":     message['from'],
                        "date":     datetime.fromtimestamp(time.mktime(email.utils.parsedate(message['date']))),
                        "body":     payload,
                        "messageid":    message['Message-id'],
                        "collection_name":   mailbox_name,
                        "collection_message_id":   count_within_mbox,
                    }
                }
                try:
                    es.index(**out)
                except Exception, e:
                    print
                    print "skipping message", message['Message-id']  , ":", str(e)
                    print message_part.get_content_charset()
                    count_within_mbox -= 1
                    # raise



